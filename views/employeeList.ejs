<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Udhar Khata</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&family=Roboto:wght@300;500&display=swap" rel="stylesheet"/>
  <style>
    body {
      font-family: 'Poppins', sans-serif;
    }
    h1, h2 {
      font-family: 'Roboto', sans-serif;
    }
  </style>
</head>
<body class="bg-gray-100 text-gray-800">

  
  <div class="flex min-h-screen">


    <aside class="bg-gray-800 text-white w-64 p-6">
      <h1 class="text-2xl font-bold mb-6">Employee List</h1>
      <nav>
        <ul>
          <li class="mb-4">
            <a href="/dashboard" class="flex items-center gap-2 p-2 rounded hover:bg-blue-800">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M3 10h11M9 21V3m6 6h6m-6 6h6" />
              </svg>
              Dashboard
            </a>
          </li>
          <li class="mb-4">
            <a href="/bill/" class="flex items-center gap-2 p-2 rounded hover:bg-blue-800">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.354a1 1 0 011.71.708v10.876a1 1 0 01-1.71.708l-6.342-5.438a1 1 0 010-1.416l6.342-5.438z" />
              </svg>
              Cart
            </a>
          </li>
          <li class="mb-4">
            <a href="/" class="flex items-center gap-2 p-2 rounded hover:bg-blue-800">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.354a1 1 0 011.71.708v10.876a1 1 0 01-1.71.708l-6.342-5.438a1 1 0 010-1.416l6.342-5.438z" />
              </svg>
              Add Product
            </a>
          </li>
          <li class="mb-4">
            <a href="/product/update" class="flex items-center gap-2 p-2 rounded hover:bg-blue-800">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.354a1 1 0 011.71.708v10.876a1 1 0 01-1.71.708l-6.342-5.438a1 1 0 010-1.416l6.342-5.438z" />
              </svg>
              Update Product
            </a>
          </li>
          <li class="mb-4">
            <a href="/product/entry" class="flex items-center gap-2 p-2 rounded hover:bg-blue-800">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.354a1 1 0 011.71.708v10.876a1 1 0 01-1.71.708l-6.342-5.438a1 1 0 010-1.416l6.342-5.438z" />
              </svg>
              Inventory
            </a>
          </li>
          <li class="mb-4">
            <a href="/product/del" class="flex items-center gap-2 p-2 rounded hover:bg-blue-800">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.354a1 1 0 011.71.708v10.876a1 1 0 01-1.71.708l-6.342-5.438a1 1 0 010-1.416l6.342-5.438z" />
              </svg>
              Delete Product
            </a>
          </li>
          <li class="mb-4">
            <a href="/user/udhar" class="flex items-center gap-2 p-2 rounded hover:bg-blue-800">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.354a1 1 0 011.71.708v10.876a1 1 0 01-1.71.708l-6.342-5.438a1 1 0 010-1.416l6.342-5.438z" />
              </svg>
              Add Udhar Khata
            </a>
          </li>
          <li class="mb-4">
            <a href="/bill/display-bills" class="flex items-center gap-2 p-2 rounded hover:bg-blue-800">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.354a1 1 0 011.71.708v10.876a1 1 0 01-1.71.708l-6.342-5.438a1 1 0 010-1.416l6.342-5.438z" />
              </svg>
              Invoices
            </a>
          </li>
          <li class="mb-4">
            <a href="/user/emp-list" class="flex items-center gap-2 p-2 rounded bg-gray-700">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.354a1 1 0 011.71.708v10.876a1 1 0 01-1.71.708l-6.342-5.438a1 1 0 010-1.416l6.342-5.438z" />
              </svg>
              Employee List
            </a>
          </li>
          <li class="mb-4">
            <a href="/product/return" class="flex items-center gap-2 p-2 rounded hover:bg-blue-800">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.354a1 1 0 011.71.708v10.876a1 1 0 01-1.71.708l-6.342-5.438a1 1 0 010-1.416l6.342-5.438z" />
              </svg>
              return Product
            </a>
          </li>
          <li class="mb-4">
            <a href="/user/day-book" class="flex items-center gap-2 p-2 rounded hover:bg-blue-800">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.354a1 1 0 011.71.708v10.876a1 1 0 01-1.71.708l-6.342-5.438a1 1 0 010-1.416l6.342-5.438z" />
              </svg>
              Day Book
            </a>
          </li>
          <li class="mb-4">
            <a href="/user/chart-report" class="flex items-center gap-2 p-2 rounded hover:bg-blue-800">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.354a1 1 0 011.71.708v10.876a1 1 0 01-1.71.708l-6.342-5.438a1 1 0 010-1.416l6.342-5.438z" />
              </svg>
              Reports
            </a>
          </li>
          
        </ul>
      </nav>
    </aside>


    <div class="flex-1">
      <header class="bg-gray-800 text-white p-4 shadow-md">
        <div class="container mx-auto flex justify-between items-center">
          <h2 class="text-xl font-bold">Employee Records</h2>
          <button onclick="openPopup()" class="bg-white text-blue-600 px-4 py-2 rounded shadow hover:bg-gray-100">Add Entry</button>
          <div id="popupForm" class="hidden fixed inset-0 bg-gray-700 bg-opacity-50 flex justify-center items-center z-50">
            <div class="bg-white p-8 rounded-lg shadow-lg w-full max-w-3xl">
              <h2 class="text-center text-3xl font-bold text-gray-700 mb-8" style="font-family: 'Roboto', sans-serif;">Add Employee</h2>
              <form action="/user/add-emp" method="post">
                <div class="form-group mb-6 text-blue-600">
                  <label for="employeeName" class="block text-gray-700 font-semibold mb-2">Employee Name</label>
                  <input type="text" name="empName" class="form-control p-2 w-full border rounded text-blue-600" id="employeeName placeholder="Enter customer name" required>
                  <label for="mobile" class="block text-gray-700 font-semibold mb-2 mt-4">Mob.No</label>
                  <input type="number" name="Mobo" class="form-control p-2 w-full border rounded" id="mobile" placeholder="Enter Phone Number" maxlength="10" minlength="10" required>
                </div>
    
                <div class="form-group mb-6 flex items-center gap-10">
                  <label for="empEmail" class="block text-gray-700 font-semibold">Email</label>
                  <input type="email" name="empEmail" class="form-control p-2 w-1/3 border rounded text-black" id="empEmail" placeholder="Employee Email">
    
                   <label for="password" class="block text-gray-700 font-semibold">Password</label>
                  <input type="password" name="empPwd" class="form-control p-2 w-1/3 border rounded text-black" id="password" placeholder="@vncK#556">
                </div>
    
                <div class="form-group mb-6 flex items-center gap-4">
                  <label for="empSalary" class="block text-gray-700 font-semibold">Salary (in Rs)</label>
                  <input type="number" name="empSalary" class="form-control text-black p-2 w-full border rounded" id="empSalary" placeholder="Total Salary Amount" required>
    
                  
                  
                </div>
    
                <button type="submit" onclick="submitUdhar()" class="btn btn-primary bg-blue-500 text-white font-semibold py-2 px-4 rounded-lg hover:bg-blue-600 w-full">Submit</button>
                <button type="button" onclick="closePopup()" class="mt-4 bg-red-500 text-white font-semibold py-2 px-4 rounded-lg hover:bg-red-600 w-full">Cancel</button>
              </form>
            </div>
          </div>
        </div>
      </header>

      <main class="container mx-auto mt-6 p-4">
        <div class="bg-white rounded shadow-md p-6">
          <h2 class="text-2xl font-bold mb-4">Employee Description</h2>


          <div class="mb-4">
            <input 
              type="text" 
              placeholder="Search customer name..." 
              class="w-full border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>


          <div class="overflow-x-auto">
            <table class="min-w-full bg-white border border-gray-200">
              <thead>
                <tr class="bg-gray-100 border-b">
                  <th class="text-left py-3 px-4 font-medium text-gray-700">#</th>
                  <th class="text-left py-3 px-4 font-medium text-gray-700">Employee Name</th>
                  <th class="text-left py-3 px-4 font-medium text-gray-700">Employee Id</th>
                  <th class="text-left py-3 px-4 font-medium text-gray-700">Date Of Joining</th>
                  <th class="text-left py-3 px-4 font-medium text-gray-700">Salary</th>
                  <th class="text-left py-3 px-4 font-medium text-gray-700">Mob.No</th>
                  <th class="text-left py-3 px-4 font-medium text-gray-700">Actions</th>
                  
                  
                </tr>
              </thead>
              <tbody>
                
              </tbody>
            </table>
          </div>
        </div>
      </main>


      <footer class="bg-gray-800 text-white py-4 mt-6">
        <div class="container mx-auto text-center">
          <p class="text-sm">© 2024 Udhar Khata App. All rights reserved.</p>
        </div>
      </footer>
    </div>
  </div>

  <script>

window.addEventListener('load', async () => {
        let empData = await fetch("http://localhost:5500/user/emp-detail");
        let empResp = await empData.json();
        console.log(empResp)
        let tbody = document.querySelector('tbody');
        let count = 0;

        empResp.map((item) => {
            count++;
            
            let tr = document.createElement('tr');
            tr.className = "border-b hover:bg-gray-50";
            
            tr.innerHTML = `
                <td class="editable py-3 px-4">${count}</td>
                <td class="editable py-3 px-4">${item.name}</td>
                <td class="editable py-3 px-4">${item.email}</td>
                <td class="py-3 px-4">${new Date(item.createdAt).toDateString()}</td>
                <td class="py-3 px-4">${item.Salary}</td>
                <td class="py-3 px-4">${item.MobNo}</td>
                
                
                <td class="py-3 px-4 flex justify-start gap-8 item-center">
                    
                    <img src="https://img.icons8.com/?size=100&id=8329&format=png&color=FA5252" class="w-6 h-6"/>
                </td>
            `;
            tbody.appendChild(tr);
        });

        // Attach edit functionality to the "Edit" buttons after the data is loaded
        document.querySelectorAll('.edit-btn').forEach(button => {
            button.addEventListener('click', async function () {
                // Find the corresponding row
                const row = this.closest('tr');
                const cells = row.querySelectorAll('.editable');
                     
                // Check if the row is in edit mode
                if (this.innerText === 'Edit') {
                    // Make cells editable
                    cells.forEach(cell => {
                        cell.contentEditable = true;
                    });
                    // Change button to 'Save'
                    this.innerText = 'Save';
                } else {
                    // Save the changes and disable editing
                    cells.forEach(cell => {
                        cell.contentEditable = false;
                    });
                   let obj={
                    'customerName':cells[1].textContent,
                    'BillAmount':cells[2].textContent
                   }
                    
                    // Change button back to 'Edit'
                    this.innerText = 'Edit';
                    let updatedUdhar=await fetch("http://localhost:5500/user/update-khata",{
                      method:'POST',
                      headers:{
                        'Content-Type':'application/json'
                      },
                      body:JSON.stringify(obj)
                    })
                    let updatedResp=await updatedUdhar.json()
                    console.log(updatedResp)
                    
                    
                     

                }
            });
        });
        document.querySelectorAll('.delete-btn').forEach(btn => {
            btn.addEventListener('click',async function() {
                // Find the corresponding row
                const row = this.closest('tr');
                // console.log(row)
                const cells = row.querySelectorAll('.editable');
                console.log(cells)
                let customerName=cells[1].textContent
                console.log(cells[1].textContent)
                let udharDelete=await fetch(`http://localhost:5500/user/delete-khata/`,{
                  method:'DELETE',
                  headers:{
                    'Content-type':'application/json'
                  },
                  body:JSON.stringify({cname:customerName})
                })
                let resp=await udharDelete.json()
                console.log(resp)
                tbody.removeChild(row)

                
                
            })
          })
    });

    function submitUdhar() {
        window.location.href = '/user/udhar-khatas';
    }

    // Open Popup Form
    function openPopup() {
        document.getElementById('popupForm').classList.remove('hidden');
    }

    // Close Popup Form
    function closePopup() {
        document.getElementById('popupForm').classList.add('hidden');
    }

      


  
  </script>
</body>
</html>
